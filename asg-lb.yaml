AWSTemplateFormatVersion: 2010-09-09

Parameters:
  InstanceType:
    Description: Type of EC2 instance to launch
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
  SSHKeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: aws-test-oregon
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  AWSRegion:
    Type: String
    Default: eu-west-3
  InstanceName:
    Description: Logical instance name seen in AWS console
    Type: String
    Default: ASG-Tomcat-Node
  AvailabilityZones:
    Type: CommaDelimitedList
    Default: eu-west-3a
Mappings:
  RegionMap:
    eu-west-3:
      AMI: ami-0f962299dc4d90c81
Resources:
  NodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !Ref AvailabilityZones
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: '1'
      MaxSize: '4'
      DesiredCapacity: '3'
      LoadBalancerNames:
        - !Ref ElasticLoadBalancer
      Tags:
        - Key: Type
          Value: Prod
          PropagateAtLaunch: 'true'
        - Key: Name
          Value: !Ref InstanceName
          PropagateAtLaunch: 'true'
  LaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      UserData: 
        Fn::Base64: 
          !Sub | 
            #!/bin/bash -xe 
            sudo -i 
            yum -y update
            yum -y install httpd
            PrivatIP=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
            echo "Web Server with $PrivatIP" > /var/www/html/index.html
            sudo service httpd start
            chkconfig httpd on			
      SecurityGroups:
        - !Ref ProjectXNodeSecurityGroup
      InstanceType: !Ref InstanceType
      KeyName: !Ref SSHKeyName
  WebServerScaleUpPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref NodeGroup
      Cooldown: '120'
      ScalingAdjustment: '1'
  WebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref NodeGroup
      Cooldown: '120'
      ScalingAdjustment: '-1'
  CPUAlarmHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-up if CPU > 80% for 5 minutes (300 sec)
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '80'
      AlarmActions:
        - !Ref WebServerScaleUpPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref NodeGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-down if CPU <20% for 5 min (300 sec)
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '20'
      AlarmActions:
        - !Ref WebServerScaleDownPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref NodeGroup
      ComparisonOperator: LessThanThreshold
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      AvailabilityZones: !Ref AvailabilityZones
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
      HealthCheck:
        Target: !Join 
          - ''
          - - 'HTTP:'
            - '80'
            - /
        HealthyThreshold: '10'
        UnhealthyThreshold: '5'
        Interval: '20'
        Timeout: '10'
  ProjectXNodeSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access and HTTP access on the inbound port
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
Outputs:
  URL:
    Description: The URL of the website
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - ElasticLoadBalancer
          - DNSName

#https://s3.eu-west-3.amazonaws.com/cf-templates-1ldvye973texh-eu-west-3/2019139N5u-new.template0d2imfvs8pvv
# https://s3.eu-west-3.amazonaws.com/cf-templates-1ldvye973texh-eu-west-3/2019139cpk-new.templatez5lliz3puwi
# https://s3.eu-west-3.amazonaws.com/cf-templates-1ldvye973texh-eu-west-3/2019139WwE-LB-ASG-HTTPD7iasijr7psb